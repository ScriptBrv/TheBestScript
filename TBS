--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v87=v5(v82,v19);v19=nil;return v87;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((570 -(367 + 201))^(v32-(2 -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(878 -((399 -(32 + 85)) + 595)))) + (2 -1))) ;return v83-(v83%(620 -(555 + 64))) ;else local v84=(2 -0)^(v32-(1066 -(68 + 978 + 19))) ;return (((v31%(v84 + v84))>=v84) and (1271 -(51 + 175 + 1044))) or (931 -(857 + 74)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=957 -((3545 -2653) + 65) ;local v36;local v37;while true do if (v35==((1303 -(802 + 150)) -(87 + 263))) then return (v37 * (436 -(67 + 113))) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (4 -2) ;v35=1 -0 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + 4 ;return (v41 * (30433252 -13656036)) + (v40 * (47703 + 17833)) + (v39 * 256) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=998 -(915 + 82) ;local v45=(v20(v43,2 -1 ,20) * ((2 + 0)^(41 -9))) + v42 ;local v46=v20(v43,1208 -((1890 -821) + 118) ,70 -39 );local v47=((v20(v43,69 -37 )==(1 + 0)) and  -(1 -0)) or 1 ;if (v46==(0 + 0)) then if (v45==((1229 -(145 + 293)) -(368 + 423))) then return v47 * (0 -0) ;else v46=1;v44=18 -(10 + 8) ;end elseif (v46==(7874 -5827)) then return ((v45==0) and (v47 * ((443 -(416 + 26))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1453 -(44 + 386)) ) * (v44 + (v45/((1488 -(998 + 488))^(23 + 29)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 + 0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};for v65=1, #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 1821 -(1483 + 338) ;end)();while true do if (1==v67) then if (v51~=3) then else for v97= #">",v23() do local v98=(function() return 0;end)();local v99=(function() return;end)();while true do if (v98~=0) then else v99=(function() return v21();end)();if (v20(v99, #"]", #"\\")==0) then local v111=(function() return 0;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v111~=(1697 -(1229 + 466))) then else if (v20(v113, #"!", #"[")~= #"\\") then else v114[580 -(386 + 192) ]=(function() return v58[v114[1208 -(696 + 510) ]];end)();end if (v20(v113,3 -1 ,2)~= #",") then else v114[ #"-19"]=(function() return v58[v114[ #"xnx"]];end)();end v111=(function() return 1265 -(1091 + 171) ;end)();end if (v111~=(1 + 0)) then else local v117=(function() return 0 -0 ;end)();while true do if (v117==1) then v111=(function() return 2;end)();break;end if (v117~=(0 -0)) then else v114=(function() return {v22(),v22(),nil,nil};end)();if (v112==(0 -0)) then local v322=(function() return 0;end)();local v323=(function() return;end)();while true do if (v322==(698 -(208 + 490))) then v323=(function() return 0 + 0 ;end)();while true do if (v323~=0) then else v114[ #"19("]=(function() return v22();end)();v114[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v112== #"~") then v114[ #"19("]=(function() return v23();end)();elseif (v112==2) then v114[ #"asd"]=(function() return v23() -((1 + 1)^16) ;end)();elseif (v112== #"xxx") then local v458=(function() return 0;end)();while true do if (v458~=(836 -(660 + 176))) then else v114[ #"-19"]=(function() return v23() -((1 + 1)^(218 -(14 + 188))) ;end)();v114[ #"asd1"]=(function() return v22();end)();break;end end end v117=(function() return 1;end)();end end end if (v111==(675 -(534 + 141))) then v112=(function() return v20(v99,1 + 1 , #"xxx");end)();v113=(function() return v20(v99, #"asd1",6);end)();v111=(function() return 1;end)();end if (v111==(3 + 0)) then if (v20(v113, #"91(", #"asd")~= #",") then else v114[ #".dev"]=(function() return v58[v114[ #"0313"]];end)();end v53[v97]=(function() return v114;end)();break;end end end break;end end end for v100= #"~",v23() do v54,v100,v28=(function() return v52(v54,v100,v28);end)();end return v56;end if (v51==(1 + 0)) then local v94=(function() return 0;end)();while true do if (v94==(1 -0)) then v57=(function() return v23();end)();v51=(function() return 2;end)();break;end if (0==v94) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v94=(function() return 1 -0 ;end)();end end end break;end if (v67==(0 -0)) then if (v51~=0) then else local v95=(function() return 0 + 0 ;end)();while true do if (1==v95) then v54=(function() return {};end)();v51=(function() return 1 + 0 ;end)();break;end if ((396 -(115 + 281))==v95) then v52=(function() return function(v106,v107,v108) local v109=(function() return 0 -0 ;end)();local v110=(function() return;end)();while true do if (v109~=(0 + 0)) then else v110=(function() return 0;end)();while true do if (v110==(0 -0)) then local v122=(function() return 0;end)();while true do if (v122==0) then v106[v107-#"!" ]=(function() return v108();end)();return v106,v107,v108;end end end end break;end end end;end)();v53=(function() return {};end)();v95=(function() return 1;end)();end end end if (v51~=(7 -5)) then else local v96=(function() return 0;end)();while true do if (1~=v96) then else v56[ #"-19"]=(function() return v21();end)();v51=(function() return 3;end)();break;end if (v96==(867 -(550 + 317))) then v58=(function() return {};end)();for v102= #">",v57 do local v103=(function() return 0;end)();local v104=(function() return;end)();local v105=(function() return;end)();while true do if (v103==(0 -0)) then local v115=(function() return 0 -0 ;end)();while true do if ((2 -1)~=v115) then else v103=(function() return 1;end)();break;end if (v115==(285 -(134 + 151))) then v104=(function() return v21();end)();v105=(function() return nil;end)();v115=(function() return 1;end)();end end end if (1~=v103) then else if (v104== #":") then v105=(function() return v21()~=(1665 -(970 + 695)) ;end)();elseif (v104==2) then v105=(function() return v24();end)();elseif (v104== #"91(") then v105=(function() return v25();end)();end v58[v102]=(function() return v105;end)();break;end end end v96=(function() return 1 -0 ;end)();end end end v67=(function() return 1;end)();end end end end local function v29(v59,v60,v61) local v62=v59[1991 -(582 + 1408) ];local v63=v59[(15 -9) -4 ];local v64=v59[(1908 -(830 + 1075)) -0 ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=3 -2 ;local v73= -(1825 -((1719 -(303 + 221)) + (1898 -(231 + 1038))));local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v85=241 -(156 + 31 + 54) ,v76 do if (v85>=v70) then v74[v85-v70 ]=v75[v85 + (781 -(162 + (1780 -(171 + 991)))) ];else v78[v85]=v75[v85 + 1 + 0 ];end end local v79=(v76-v70) + 1 + 0 ;local v80;local v81;while true do local v86=(0 -0) -0 ;while true do if ((2288>=1020) and (v86==(0 -0))) then v80=v68[v72];v81=v80[1 + 0 ];v86=1637 -((3686 -2313) + 263) ;end if (v86==1) then if (v81<=49) then if (v81<=(1024 -(451 + 549))) then if (v81<=(4 + (17 -10))) then if ((2861>661) and (328==328) and (v81<=(5 + 0))) then if (v81<=((6 -4) -0)) then if ((4525>4519) and (v81<=0)) then local v123=v80[2];local v124=v78[v123];local v125=v80[3];for v174=1,v125 do v124[v174]=v78[v123 + v174 ];end elseif ((1511<3808) and (v81>1)) then v78[v80[2 -0 ]]=v80[1387 -(746 + 638) ]~=0 ;else local v186=v80[2];v78[v186]=v78[v186](v78[v186 + 1 ]);end elseif ((v81<=((5 -3) + 1)) or (2510>4919)) then local v126=v80[2 -(0 -0) ];do return v13(v78,v126,v73);end elseif ((3178>972) and (4763==4763) and (v81>4)) then v78[v80[343 -(218 + 123) ]][v78[v80[(4896 -3312) -((2783 -(111 + 1137)) + 46) ]]]=v78[v80[4 + 0 ]];else local v190=v80[1 + 1 ];do return v13(v78,v190,v190 + v80[563 -(306 + 254) ] );end end elseif (v81<=8) then if ((4137>1848) and (v81<=6)) then do return;end elseif (v81>(1 + 6)) then v78[v80[3 -(159 -(91 + 67)) ]]=v80[1470 -((2675 -1776) + 568) ];else local v193=v80[1 + 1 ];v78[v193](v78[v193 + 1 ]);end elseif ((2436<=3134) and (v81<=9)) then v78[v80[2 + 0 ]]=v61[v80[3]];elseif (v81==(24 -14)) then local v194=v80[2];local v195,v196=v71(v78[v194](v13(v78,v194 + 1 ,v73)));v73=(v196 + v194) -(604 -(268 + 335)) ;local v197=290 -(60 + 230) ;for v325=v194,v73 do v197=v197 + (573 -(426 + 146)) ;v78[v325]=v195[v197];end else local v198=v80[2];do return v78[v198](v13(v78,v198 + 1 + 0 ,v80[1459 -(282 + 1174) ]));end end elseif ((4766==4766) and (3723==3723) and (v81<=17)) then if (v81<=(825 -(569 + (765 -(423 + 100))))) then if (v81<=(34 -22)) then v78[v80[1 + 1 + 0 ]]=v80[3];elseif (v81>((2871 -1834) -(706 + 318))) then v78[v80[1253 -(376 + 345 + 530) ]]=v78[v80[3]][v78[v80[4]]];else v78[v80[1273 -(945 + 326) ]]={};end elseif (v81<=15) then local v131=v80[2];local v132=v78[v131];local v133=v80[7 -(775 -(326 + 445)) ];for v177=1,v133 do v132[v177]=v78[v131 + v177 ];end elseif (v81>((65 -50) + 1)) then v78[v80[702 -(271 + 429) ]]();else v78[v80[(4 -2) + 0 ]]=v78[v80[1503 -((3286 -1878) + 92) ]];end elseif ((v81<=(1106 -(461 + 625))) or (2745>3128)) then if ((v81<=((2017 -(530 + 181)) -(993 + 295))) or (1144>=4606)) then local v134=v80[2];v78[v134](v13(v78,v134 + 1 + 0 ,v80[1174 -((1299 -(614 + 267)) + 753) ]));elseif (v81>19) then v78[v80[(33 -(19 + 13)) + 1 ]]=v61[v80[3]];else local v206=v80[1 + 1 ];local v207=v78[v206 + 1 + 1 ];local v208=v78[v206] + v207 ;v78[v206]=v208;if ((v207>(0 + 0)) or (4046>=4316)) then if ((v208<=v78[v206 + (530 -(406 + (199 -76))) ]) or (2008<1929)) then local v411=0;while true do if (v411==0) then v72=v80[3];v78[v206 + (1772 -(1749 + 20)) ]=v208;break;end end end elseif (v208>=v78[v206 + 1 + 0 ]) then local v412=1322 -((2910 -1661) + 73) ;while true do if (v412==((0 -0) + 0 + 0)) then v72=v80[3];v78[v206 + (1148 -(466 + 679)) ]=v208;break;end end end end elseif ((3338>=277) and (2384>1775) and (v81<=(52 -30))) then if (v81==(60 -39)) then v78[v80[1902 -(106 + 1794) ]]=v80[1 + 2 ] + v78[v80[2 + 2 ]] ;else local v211=v80[8 -5 ];local v212=v78[v211];for v328=v211 + (2 -1) ,v80[118 -(4 + 110) ] do v212=v212   .. v78[v328] ;end v78[v80[2]]=v212;end elseif (v81==(607 -(57 + 527))) then if v78[v80[(2512 -1083) -(41 + 1386) ]] then v72=v72 + ((215 -111) -(17 + (1898 -(1293 + 519)))) ;else v72=v80[3 + 0 ];end else local v214=v80[2];local v215=v78[v214];local v216=v78[v214 + 2 ];if (v216>((0 -0) -0)) then if (v215>v78[v214 + (2 -1) ]) then v72=v80[(440 -271) -(122 + 44) ];else v78[v214 + (5 -2) ]=v215;end elseif ((v215<v78[v214 + (3 -2) ]) or (4543<=4376)) then v72=v80[3 + 0 ];else v78[v214 + 1 + 2 ]=v215;end end elseif (v81<=((137 -65) -36)) then if ((2610>2560) and (728==728) and (v81<=(95 -(30 + 35)))) then if (v81<=27) then if ((v81<=((77 -59) + 7)) or (1076>4671)) then v78[v80[1259 -((2456 -1413) + 214) ]]= #v78[v80[3]];elseif ((1851>=378) and (v81>(98 -72))) then local v217=v80[1214 -(172 + 151 + 889) ];local v218=v80[10 -6 ];local v219=v217 + (582 -(361 + 219)) ;local v220={v78[v217](v78[v217 + 1 + 0 ],v78[v219])};for v329=414 -(15 + 398) ,v218 do v78[v219 + v329 ]=v220[v329];end local v221=v220[983 -(18 + (2239 -1275)) ];if (v221 or (1948>=3476) or (1194>3083)) then v78[v219]=v221;v72=v80[11 -8 ];else v72=v72 + 1 + 0 ;end else v78[v80[2]]={};end elseif (v81<=(18 + 10)) then v78[v80[852 -(20 + 192 + 638) ]]=v78[v80[3]][v78[v80[4 + 0 ]]];elseif (v81==(155 -(116 + 10))) then v78[v80[1 + 0 + 1 ]]=v78[v80[741 -(542 + 196) ]][v80[8 -4 ]];else local v225=v80[2];local v226={v78[v225](v78[v225 + 1 + 0 ])};local v227=0 + 0 ;for v332=v225,v80[(7 + 3) -6 ] do v227=v227 + (2 -1) ;v78[v332]=v226[v227];end end elseif ((916>=747) and (v81<=(1584 -(1126 + 425)))) then if (((4794>=833) and (v81<=(436 -(118 + 287)))) or (2444>2954)) then v60[v80[11 -8 ]]=v78[v80[1123 -(118 + 1003) ]];elseif (v81==(93 -61)) then v78[v80[379 -(142 + 235) ]]=v80[1099 -(709 + 387) ] + v78[v80[18 -14 ]] ;else local v229=v80[2];local v230,v231=v71(v78[v229](v13(v78,v229 + 1 + 0 ,v80[3])));v73=(v231 + v229) -(978 -(553 + 424)) ;local v232=0 -0 ;for v335=v229,v73 do v232=v232 + 1 + 0 ;v78[v335]=v230[v232];end end elseif (v81<=(34 + 0)) then local v140=v80[2 + 0 ];v78[v140]=v78[v140](v13(v78,v140 + 1 + 0 ,v73));elseif ((2892<3514) and (v81==(20 + 15))) then if ((533==533) and (v78[v80[4 -2 ]]==v78[v80[4]])) then v72=v72 + (2 -1) ;else v72=v80[6 -3 ];end else v78[v80[2]]();end elseif ((595<=3413) and (v81<=42)) then if ((3078>=2591) and (v81<=(12 + 27))) then if (v81<=37) then if ((4090==4090) and (v80[2]==v78[v80[19 -15 ]])) then v72=v72 + 1 ;else v72=v80[756 -(239 + 514) ];end elseif ((3199<4030) and (v81>(14 + 24))) then local v234=v80[2];local v235,v236=v71(v78[v234](v78[v234 + (1330 -((2655 -(673 + 1185)) + 532)) ]));v73=(v236 + v234) -(1 + 0) ;local v237=0 + 0 ;for v338=v234,v73 do v237=v237 + 1 ;v78[v338]=v235[v237];end elseif  not v78[v80[4 -2 ]] then v72=v72 + 1 ;else v72=v80[1205 -((1081 -708) + 829) ];end elseif (v81<=(771 -(476 + 255))) then local v142=1130 -(369 + 761) ;local v143;while true do if ((0 + 0)==v142) then v143=v80[2 -0 ];v78[v143]=v78[v143](v13(v78,v143 + (1 -0) ,v80[241 -(64 + 174) ]));break;end end elseif ((777<2078) and (v81==41)) then local v238=0;local v239;while true do if ((((0 -0) + 0)==v238) or (3758==2498)) then v239=v80[(2 -0) -0 ];do return v78[v239](v13(v78,v239 + (337 -(144 + 192)) ,v80[219 -(42 + 174) ]));end break;end end else v78[v80[2 + 0 ]]=v78[v80[3 + 0 ]]%v80[2 + 2 ] ;end elseif ((1696<=2282) and (v81<=(1549 -(363 + 1141)))) then if (v81<=43) then local v144=v80[1582 -(1183 + 397) ];local v145=v78[v80[8 -(4 + 1) ]];v78[v144 + 1 + 0 + 0 ]=v145;v78[v144]=v145[v78[v80[(3 -0) + 1 ]]];elseif (v81>(2019 -(1913 + 62))) then v78[v80[2 + 0 + 0 ]][v78[v80[3]]]=v80[10 -6 ];else local v243=v80[2];local v244=v78[v80[1936 -(565 + 1368) ]];v78[v243 + (3 -2) ]=v244;v78[v243]=v244[v78[v80[1665 -(1477 + 184) ]]];end elseif (v81<=(63 -16)) then if (v81==46) then v78[v80[2]]=v78[v80[3 + 0 ]] + v80[860 -(564 + 292) ] ;elseif ((v80[2 -0 ]==v78[v80[11 -7 ]]) or (1761>=2462)) then v72=v72 + (305 -(244 + 60)) ;else v72=v80[3];end elseif ((v81==48) or (2673<1575)) then if ((4551>2328) and ((v78[v80[2 + 0 ]]==v80[480 -(41 + 435) ]) or (3721<=1455))) then v72=v72 + (1002 -(938 + 63)) ;else v72=v80[3 + (0 -0) ];end else v78[v80[1127 -(936 + 189) ]][v80[1 + 2 ]]=v78[v80[1617 -((3071 -1506) + 48) ]];end elseif (v81<=(46 + 28)) then if ((3825>=467) and (v81<=61)) then if ((934<2270) and (v81<=(1193 -(782 + (2236 -(446 + 1434)))))) then if ((v81<=(319 -(176 + 91))) or (2890==557)) then if (v81<=(130 -80)) then v78[v80[2 -0 ]]=v78[v80[3]]%v80[1096 -(975 + (1400 -(1040 + 243))) ] ;elseif (v81==(1926 -(157 + 1718))) then local v251=v80[2 + 0 ];v78[v251](v13(v78,v251 + (3 -2) ,v80[10 -7 ]));else for v343=v80[1020 -(697 + 321) ],v80[7 -4 ] do v78[v343]=nil;end end elseif (v81<=(111 -58)) then v78[v80[4 -2 ]][v80[2 + 1 ]]=v78[v80[6 -(5 -3) ]];elseif ((v81==(144 -90)) or (1612==1255)) then v72=v80[1230 -(322 + 905) ];else local v253=v80[2];local v254,v255=v71(v78[v253](v13(v78,v253 + (612 -(602 + 9)) ,v80[1192 -(449 + (2587 -(559 + 1288))) ])));v73=(v255 + v253) -(873 -(826 + 46)) ;local v256=0;for v345=v253,v73 do v256=v256 + (948 -(245 + 702)) ;v78[v345]=v254[v256];end end elseif ((v81<=58) or (4352<4206) or (4770==2904)) then if (v81<=(176 -(2051 -(609 + 1322)))) then if ( not v78[v80[2]] or (3903==4536)) then v72=v72 + 1 + 0 ;else v72=v80[(2355 -(13 + 441)) -(260 + 1638) ];end elseif ((4093<=4845) and ((v81==57) or (2860<=181))) then v78[v80[442 -(382 + 58) ]]=v80[9 -6 ]~=0 ;else local v259=v80[2 + (0 -0) ];v78[v259]=v78[v259]();end elseif ((1569<=3647) and (v81<=(121 -62))) then v78[v80[(13 -8) -3 ]][v78[v80[(6016 -4808) -(902 + 303) ]]]=v80[8 -4 ];elseif (v81==(144 -84)) then local v261=v80[2];v78[v261]=v78[v261](v78[v261 + 1 + 0 ]);else local v263=v80[2];do return v13(v78,v263,v73);end end elseif ((v81<=67) or (4046>=4927)) then if ((4623>=2787) and (v81<=(1754 -(1121 + 569)))) then if (v81<=(3 + 59)) then local v154=214 -(22 + 192) ;local v155;local v156;while true do if (v154==(683 -(483 + 200))) then v155=v80[1465 -(1404 + 59) ];v156={};v154=1;end if (v154==(2 -1)) then for v380=1, #v77 do local v381=0 -0 ;local v382;while true do if (0==v381) then v382=v77[v380];for v448=0 -0 , #v382 do local v449=v382[v448];local v450=v449[766 -(468 + 297) ];local v451=v449[564 -(119 + 215 + 228) ];if ((3222>=1527) and (v450==v78) and (v451>=v155)) then local v469=(0 + 0) -0 ;while true do if ((2234>=1230) and (v469==0)) then v156[v451]=v450[v451];v449[(5 -3) -1 ]=v156;break;end end end end break;end end end break;end end elseif (v81>(114 -51)) then v60[v80[1 + 2 ]]=v78[v80[2]];else local v266=v80[238 -(78 + 63 + 95) ];local v267,v268=v71(v78[v266](v13(v78,v266 + 1 + (0 -0) ,v73)));v73=(v268 + v266) -(2 -1) ;local v269=0;for v349=v266,v73 do local v350=0 -(0 + 0) ;while true do if ((0 + 0)==v350) then v269=v269 + (2 -1) ;v78[v349]=v267[v269];break;end end end end elseif (v81<=(46 + 19)) then v78[v80[2 + 0 ]][v78[v80[4 -1 ]]]=v78[v80[3 + 1 ]];elseif (((1505<=2121) and (v81==(37 + 29))) or (343==1786)) then local v270=v69[v80[166 -(92 + 71) ]];local v271;local v272={};v271=v10({},{__index=function(v351,v352) local v353=v272[v352];return v353[1 + 0 ][v353[2 -0 ]];end,__newindex=function(v354,v355,v356) local v357=v272[v355];v357[766 -(574 + 191) ][v357[2 + 0 ]]=v356;end});for v359=2 -1 ,v80[3 + (434 -(153 + 280)) ] do local v360=0;local v361;while true do if ((2570>2409) and (v360==1)) then if (v361[850 -(254 + 595) ]==(142 -(55 + 71))) then v272[v359-(1 -0) ]={v78,v361[8 -5 ]};else v272[v359-(1 + 0) ]={v60,v361[942 -(714 + 225) ]};end v77[ #v77 + (2 -1) ]=v272;break;end if (((0 -0)==v360) or (2609>=3234)) then v72=v72 + 1 ;v361=v68[v72];v360=1 + 0 + 0 ;end end end v78[v80[2 -0 ]]=v29(v270,v271,v61);elseif (v78[v80[808 -(118 + 688) ]]==v80[52 -(25 + 23) ]) then v72=v72 + 1 + 0 ;else v72=v80[3];end elseif (((744==744) and (v81<=(1956 -(927 + 959)))) or (3033>=4031)) then if ((v81<=(229 -161)) or (1401==4668)) then local v159=v80[734 -(7 + 9 + 716) ];local v160=v80[4];local v161=v159 + (3 -1) ;local v162={v78[v159](v78[v159 + (98 -(11 + 86)) ],v78[v161])};for v180=1,v160 do v78[v161 + v180 ]=v162[v180];end local v163=v162[(2 + 0) -1 ];if ((2776>=1321) and (v163 or (1979>=2836))) then local v274=285 -(159 + 16 + 110) ;while true do if ((1833<=2668) and (v274==(0 -0))) then v78[v161]=v163;v72=v80[3];break;end end else v72=v72 + (4 -(3 + 0)) ;end elseif (v81>(1865 -(503 + 1293))) then v78[v80[2 -0 ]]=v60[v80[8 -5 ]];else local v277=v80[2 + 0 ];local v278=v78[v277 + (1063 -(810 + 251)) ];local v279=v78[v277] + v278 ;v78[v277]=v279;if ((3686==3686) and (v278>(0 + 0))) then if ((v279<=v78[v277 + 1 + 0 ]) or (487>2303)) then local v421=0 + 0 ;while true do if ((v421==(533 -(43 + 490))) or (4503==3462)) then v72=v80[3];v78[v277 + (736 -(711 + 22)) ]=v279;break;end end end elseif ((3467>477) and (v279>=v78[v277 + (3 -2) ])) then v72=v80[3];v78[v277 + ((533 + 329) -(240 + 619)) ]=v279;end end elseif ((553<=1543) and ((v81<=(18 + 54)) or (3288>=3541))) then if ((2015==2015) and (v81==71)) then v78[v80[2 -0 ]]=v78[v80[1 + (669 -(89 + 578)) ]]%v78[v80[1748 -(961 + 383 + 400) ]] ;else local v282=405 -(255 + 150) ;local v283;while true do if (v282==(0 + 0)) then v283=v80[2];v78[v283]=v78[v283](v13(v78,v283 + 1 + 0 ,v73));break;end end end elseif (v81==(311 -238)) then local v284=v80[6 -4 ];local v285={v78[v284](v78[v284 + (1740 -(404 + 1335)) ])};local v286=406 -(183 + 223) ;for v362=v284,v80[4] do local v363=0 -(0 -0) ;while true do if (v363==(0 + 0)) then v286=v286 + 1 + 0 ;v78[v362]=v285[v286];break;end end end else v78[v80[339 -(10 + 327) ]]=v60[v80[3 + 0 ]];end elseif (v81<=(424 -(118 + (1269 -(572 + 477))))) then if ((v81<=(27 + 53)) or (3557==4540)) then if (v81<=(11 + 66)) then if ((v81<=(524 -(108 + 341))) or (4241<=2332)) then local v164=v80[1 + 1 ];v78[v164]=v78[v164]();elseif (v81>76) then v72=v80[12 -(6 + 3) ];else local v290=v80[1495 -(711 + 782) ];local v291,v292=v71(v78[v290](v78[v290 + (1 -0) ]));v73=(v292 + v290) -1 ;local v293=(56 + 413) -(270 + 199) ;for v364=v290,v73 do v293=v293 + 1 ;v78[v364]=v291[v293];end end elseif ((v81<=(26 + 52)) or (2364<1157)) then if (v78[v80[2]] or (261>1267)) then v72=v72 + (1820 -(580 + 1239)) ;else v72=v80[8 -5 ];end elseif (((1272<3858) and (v81>(76 + 3))) or (1167>1278)) then v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]]%v78[v80[9 -5 ]] ;else local v296=0 + 0 ;local v297;local v298;while true do if ((v296==(86 -(84 + 2))) or (1145<=1082)) then v297=v80[1169 -(645 + 522) ];v298=v78[v80[1793 -(1010 + 780) ]];v296=1 + 0 ;end if (((3664==3664) and (v296==(4 -3))) or (3105==4881)) then v78[v297 + (2 -1) ]=v298;v78[v297]=v298[v80[1840 -((1722 -677) + 791) ]];break;end end end elseif ((1941>=450) and (v81<=83)) then if (v81<=(204 -123)) then v78[v80[2 -0 ]]=v78[v80[508 -(351 + 111 + 43) ]];elseif (v81>82) then local v299=(2416 -(497 + 345)) -(1281 + 8 + 285) ;local v300;local v301;while true do if ((v299==(267 -(28 + 238))) or (1887>4878)) then for v426=v300 + (2 -1) ,v80[1563 -(1381 + 178) ] do v301=v301   .. v78[v426] ;end v78[v80[2]]=v301;break;end if ((v299==(0 + 0 + 0)) or (4646<324)) then v300=v80[3];v301=v78[v300];v299=1;end end else do return;end end elseif (v81<=84) then local v168=v80[2 + 0 ];v78[v168]=v78[v168](v13(v78,v168 + 1 + (1333 -(605 + 728)) ,v80[10 -7 ]));elseif (v81>(45 + 40)) then local v302=v80[472 -(381 + 89) ];local v303={};for v367=1, #v77 do local v368=v77[v367];for v384=0 + 0 , #v368 do local v385=0 + 0 ;local v386;local v387;local v388;while true do if (v385==(1 -0)) then v388=v386[1158 -(767 + 307 + 82) ];if (((v387==v78) and (v388>=v302)) or (4087>4116)) then v303[v388]=v387[v388];v386[1 -0 ]=v303;end break;end if ((1106<=1266) and (v385==(1784 -(214 + 1570)))) then v386=v368[v384];v387=v386[1456 -(990 + 465) ];v385=1 + (0 -0) ;end end end end else v78[v80[1 + 1 ]]= #v78[v80[3]];end elseif ((3833==3833) and (v81<=(5 + 85 + 2))) then if (v81<=89) then if (v81<=(342 -(942 -687))) then local v170=1726 -(1668 + 58) ;local v171;local v172;local v173;while true do if (v170==(626 -(462 + 50 + 114))) then v171=v80[5 -(7 -4) ];v172=v78[v171];v170=1;end if ((v170==(1 -0)) or (1240>3370)) then v173=v78[v171 + (6 -4) ];if ((3155<4650) and (v173>(0 + 0))) then if (v172>v78[v171 + 1 + 0 + 0 ]) then v72=v80[3];else v78[v171 + 3 + 0 ]=v172;end elseif (v172<v78[v171 + (3 -(491 -(457 + 32))) ]) then v72=v80[1997 -(109 + 1885) ];else v78[v171 + (1472 -(1269 + 85 + 115)) ]=v172;end break;end end elseif (v81>88) then local v305=v80[3 -1 ];v78[v305](v78[v305 + (816 -(98 + 717)) ]);else local v306=826 -(802 + 24) ;local v307;local v308;local v309;while true do if ((2 -0)==v306) then for v427=1 -(1402 -(832 + 570)) ,v80[1 + 3 ] do v72=v72 + 1 + 0 ;local v428=v68[v72];if ((v428[1]==(3 + 13)) or (2481==4682)) then v309[v427-(1 + 0) ]={v78,v428[2 + 1 ]};else v309[v427-(1 + 0) ]={v60,v428[3 + 0 ]};end v77[ #v77 + 1 + 0 ]=v309;end v78[v80[1435 -(797 + 636) ]]=v29(v307,v308,v61);break;end if ((4727>=208) and (v306==(0 -0))) then v307=v69[v80[1622 -(1427 + 192) ]];v308=nil;v306=1 + 0 ;end if (1==v306) then v309={};v308=v10({},{__index=function(v430,v431) local v432=0 -0 ;local v433;while true do if ((0 + 0)==v432) then v433=v309[v431];return v433[1 + 0 ][v433[328 -(192 + 134) ]];end end end,__newindex=function(v434,v435,v436) local v437=v309[v435];v437[1277 -(316 + 960) ][v437[2 + 0 ]]=v436;end});v306=2 + 0 ;end end end elseif ((280<3851) and (v81<=(84 + 6))) then if ((3774>=1839) and (v78[v80[7 -5 ]]==v78[v80[4]])) then v72=v72 + (552 -(83 + (1121 -(232 + 421)))) ;else v72=v80[1809 -(1202 + 604) ];end elseif (v81==(424 -(2222 -(1569 + 320)))) then v78[v80[2 -0 ]]=v78[v80[8 -5 ]][v80[329 -(45 + 280) ]];else do return v78[v80[2 + 0 ]];end end elseif (v81<=(83 + 12)) then if (v81<=93) then for v183=v80[1 + 1 + 0 ],v80[2 + 1 ] do v78[v183]=nil;end elseif ((2811==2811) and (v81==94)) then local v313=0;local v314;local v315;while true do if ((2146>1122) and (v313==(1 + 0))) then v78[v314 + 1 ]=v315;v78[v314]=v315[v80[6 -2 ]];break;end if ((v313==(1911 -(340 + 1571))) or (3007>3194)) then v314=v80[1 + 1 ];v315=v78[v80[3]];v313=1773 -(1733 + 8 + 31) ;end end else do return v78[v80[5 -3 ]];end end elseif ((v81<=(1131 -(125 + 909))) or (2136>=2946)) then if (v81==(2044 -(1096 + 852))) then local v316=v80[1 + 1 ];local v317=v78[v316];for v372=v316 + 1 ,v80[3 -0 ] do v7(v317,v78[v372]);end else v78[v80[2 + (0 -0) ]]=v78[v80[515 -(409 + 103) ]] + v80[240 -(46 + (795 -(316 + 289))) ] ;end elseif ((2165<=2521) and (v81>(193 -(51 + 44)))) then local v319=v80[(2 -1) + 1 ];v78[v319](v13(v78,v319 + (1318 -(1114 + 203)) ,v73));else local v320=726 -(228 + 498) ;local v321;while true do if ((v320==(0 + 0 + 0)) or (56==3616)) then v321=v80[2 + 0 ];v78[v321](v13(v78,v321 + (664 -(174 + 489)) ,v73));break;end end end v72=v72 + 1 ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
